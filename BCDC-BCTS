> # Install necessary packages if not already installed
> if (!require("shiny")) install.packages("shiny")
> if (!require("leaflet")) install.packages("leaflet")
> if (!require("bcdata")) install.packages("bcdata")
> if (!require("sf")) install.packages("sf")
> 
> # Load libraries
> library(shiny)
> library(leaflet)
> library(bcdata)
> library(sf)
> 
> # Define UI for the app
> ui <- fluidPage(
+     titlePanel("BC Forest Tenure Data Viewer"),
+     
+     sidebarLayout(
+         sidebarPanel(
+             h4("Select Layers to View"),
+             checkboxInput("show_operating_areas", "Show Operating Areas", TRUE),
+             checkboxInput("show_sales_schedule", "Show Sales Schedule", TRUE)
+         ),
+         
+         mainPanel(
+             leafletOutput("map", width = "100%", height = "800px")
+         )
+     )
+ )
> 
> # Define server logic
> server <- function(input, output, session) {
+     
+     # Load and transform the datasets from BC Data Catalogue
+     operating_areas <- reactive({
+         if (input$show_operating_areas) {
+             # Fetch and transform data to WGS84
+             bcdc_get_data("WHSE_FOREST_TENURE.BCTS_OPERATING_AREAS_SP") %>%
+                 st_transform(crs = 4326)
+         }
+     })
+     
+     sales_schedule <- reactive({
+         if (input$show_sales_schedule) {
+             # Fetch and transform data to WGS84
+             bcdc_get_data("WHSE_FOREST_TENURE.BCTS_SALES_SCHEDULE_SV") %>%
+                 st_transform(crs = 4326)
+         }
+     })
+     
+     # Render the map with the selected layers
+     output$map <- renderLeaflet({
+         leaflet() %>%
+             addProviderTiles(providers$Esri.WorldTopoMap) %>%
+             setView(lng = -123.3656, lat = 48.4284, zoom = 6)
+     })
+     
+     # Update the map when layers are selected
+     observe({
+         leafletProxy("map") %>%
+             clearShapes()
+         
+         if (input$show_operating_areas) {
+             # Add Operating Areas layer with popup
+             leafletProxy("map") %>%
+                 addPolygons(
+                     data = operating_areas(), 
+                     color = "blue", weight = 1, 
+                     opacity = 0.7, fillOpacity = 0.3, 
+                     group = "Operating Areas",
+                     popup = ~paste(
+                         "<b>Operating Area Name:</b>", OPERATING_AREA_NAME, "<br>",
+                         "<b>Field Team:</b>", FIELD_TEAM, "<br>",
+                         "<b>Timber Sale Office:</b>", TIMBER_SALES_OFFICE_NAME
+                     )
+                 )
+         }
+         
+         if (input$show_sales_schedule) {
+             # Add Sales Schedule layer with popup
+             leafletProxy("map") %>%
+                 addPolygons(
+                     data = sales_schedule(), 
+                     color = "red", weight = 1, 
+                     opacity = 0.7, fillOpacity = 0.3, 
+                     group = "Sales Schedule",
+                     popup = ~paste(
+                         "<b>License ID:</b>", LICENCE_ID, "<br>",
+                         "<b>Block ID:</b>", BLOCK_ID, "<br>",
+                         "<b>Fiscal Year:</b>", AUCTION_FISCAL
+                     )
+                 )
+         }
+     })
+ }
> 
> # Run the application 
> shinyApp(ui = ui, server = server)
